Working with dictionaries in Python involves various operations such as adding, modifying, removing key-value pairs, looping through keys and values, and more. Here's an overview of common operations you can perform with dictionaries:

Create an empty dictionary:
python
Copy code
empty_dict = {}
Add a key-value pair to a dictionary:
python
Copy code
my_dict = {}
my_dict['key1'] = 'value1'
Access the value associated with a key:
python
Copy code
value = my_dict['key1']
print(value)  # Output: 'value1'
Safely access a value using the get() method (returns None if the key is not present):
python
Copy code
value = my_dict.get('nonexistent_key')
print(value)  # Output: None
Modify the value associated with a key:
python
Copy code
my_dict['key1'] = 'new_value1'
Remove a key-value pair using the del keyword:
python
Copy code
del my_dict['key1']
Check if a key is in the dictionary:
python
Copy code
if 'key1' in my_dict:
    print("Key 'key1' is in the dictionary.")
Loop through keys in a dictionary:
python
Copy code
for key in my_dict.keys():
    print(key)
Loop through values in a dictionary:
python
Copy code
for value in my_dict.values():
    print(value)
Loop through key-value pairs in a dictionary:
python
Copy code
for key, value in my_dict.items():
    print(key, value)
Get the number of key-value pairs in a dictionary:
python
Copy code
length = len(my_dict)
These are some of the common operations you can perform with dictionaries in Python. You can use these operations to manipulate and work with dictionaries according to your needs.



